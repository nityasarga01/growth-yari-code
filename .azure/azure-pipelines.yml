# Azure DevOps Pipeline for GrowthYari
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: BuildFrontend
    displayName: 'Build Frontend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    
    - script: |
        npm ci
        npm run build:azure
      displayName: 'Build Frontend'
      workingDirectory: '.'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'dist'
        artifactName: 'frontend'
      displayName: 'Publish Frontend Artifacts'

  - job: BuildBackend
    displayName: 'Build Backend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    
    - script: |
        cd server
        npm ci
        npm run build
      displayName: 'Build Backend'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'server'
        artifactName: 'backend'
      displayName: 'Publish Backend Artifacts'

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  jobs:
  - deployment: DeployFrontend
    displayName: 'Deploy Frontend to Static Web Apps'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureStaticWebApp@0
            inputs:
              app_location: '/'
              output_location: 'dist'
              azure_static_web_apps_api_token: $(AZURE_STATIC_WEB_APPS_API_TOKEN)

  - deployment: DeployBackend
    displayName: 'Deploy Backend to App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure Service Connection'
              appType: 'webAppLinux'
              appName: 'growthyari-backend'
              package: '$(Pipeline.Workspace)/backend'
              runtimeStack: 'NODE|18-lts'